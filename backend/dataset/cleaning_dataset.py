# -*- coding: utf-8 -*-
"""cleaning_dataset.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1z0fFtzRxYkQvIkwYD6joHpU9ibXwsVlY
"""

from google.colab import files
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

uploaded = files.upload()

file_name = list(uploaded.keys())[0]
df = pd.read_excel(file_name, engine='openpyxl')

print("Dados antes da limpeza:")
print(df.head())

def contar_bad(df):
    total_bad_celulas = df.apply(lambda col: col.map(lambda x: isinstance(x, str) and 'bad' in x.strip().lower())).sum().sum()
    total_bad_colunas = df.apply(lambda col: col.map(lambda x: isinstance(x, str) and 'bad' in x.strip().lower())).any().sum()
    total_bad_linhas = df.apply(lambda col: col.map(lambda x: isinstance(x, str) and 'bad' in x.strip().lower())).any(axis=1).sum()

    return total_bad_linhas, total_bad_colunas, total_bad_celulas

total_bad_linhas, total_bad_colunas, total_bad_celulas = contar_bad(df)

print(f"Total de linhas contendo 'Bad': {total_bad_linhas}")
print(f"Total de colunas contendo 'Bad': {total_bad_colunas}")
print(f"Total de células contendo 'Bad': {total_bad_celulas}")

df = df.map(lambda x: 0.0 if isinstance(x, str) and "bad" in x.strip().lower() else x)

print(df.head())

print("Dados após a limpeza:")
print(df.head())

df[df.columns[0]] = pd.to_datetime(df[df.columns[0]], errors='coerce')

print(df.head())

plt.figure(figsize=(10, 6))
plt.plot(df[df.columns[0]], df[df.columns[1]], label='Temperatura de Entrada do Multijato')

df.to_excel('planilha_limpa.xlsx', index=False, engine='openpyxl')

files.download('planilha_limpa.xlsx')